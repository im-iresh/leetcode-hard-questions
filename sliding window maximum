class pair_compare{
    public:
    bool operator()(pair<int,int>a,pair<int,int>b){
        return a.first<b.first;
    }
};

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n=nums.size();
        pair<int,int > p,temp;
        priority_queue<pair<int,int>,vector<pair<int,int>>,pair_compare> pq;
        vector<int> arr;
        int i,max=INT_MIN;
        for(i=0;i<k;i++){
            p = make_pair(nums[i],i);
            pq.push(p);
        }
        temp=pq.top();
        arr.push_back(temp.first);
        for(i=1;i<(n-k+1);i++){
            pq.push(make_pair(nums[i+k-1],(i+k-1)));
            temp=pq.top();
            if(temp.second<i){
                while(temp.second<i){
                    pq.pop();
                    temp=pq.top();
                }
            }
            arr.push_back(temp.first);
        }
        return arr;
    }
};
